{"ast":null,"code":"var _jsxFileName = \"D:\\\\course\\\\react jonas\\\\project\\\\ultimate-react-course\\\\10-react-quiz\\\\starter mine\\\\apps\\\\react\\\\src\\\\components\\\\FinishScreen.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FinishScreen(_ref) {\n  let {\n    points,\n    maxPossiblePoints,\n    highScore,\n    dispatch\n  } = _ref;\n  const percentage = points / maxPossiblePoints * 100;\n  let emoji;\n  if (percentage === 100) emoji = '🥇';\n  if (percentage >= 80 && percentage < 100) emoji = '🎉';\n  if (percentage >= 50 && percentage < 80) emoji = '🙃';\n  if (percentage >= 0 && percentage < 50) emoji = '🤨';\n  if (percentage === 0) emoji = '🤦‍♀️';\n  const handleRestartButton = () => {\n    dispatch({\n      type: \"restartQuiz\"\n    });\n    fetch(\"http://localhost:9000/highscore/1\", {\n      method: \"PUT\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"highscore\": highScore\n      })\n    }).then(res => res.json()).catch(err => dispatch({\n      type: \"dataFailed\"\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), \" You scored \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 39\n      }, this), \" out of \", maxPossiblePoints, \" (\", Math.ceil(percentage), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"highscore\",\n      children: [\"(Highscore : \", highScore, \" points)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-ui\",\n      onClick: handleRestartButton,\n      children: \"Restart Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c = FinishScreen;\nexport default FinishScreen;\nvar _c;\n$RefreshReg$(_c, \"FinishScreen\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","FinishScreen","_ref","points","maxPossiblePoints","highScore","dispatch","percentage","emoji","handleRestartButton","type","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Math","ceil","onClick","_c","$RefreshReg$"],"sources":["D:/course/react jonas/project/ultimate-react-course/10-react-quiz/starter mine/apps/react/src/components/FinishScreen.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction FinishScreen({ points, maxPossiblePoints, highScore, dispatch }) {\r\n  const percentage = (points / maxPossiblePoints) * 100;\r\n\r\n  let emoji;\r\n  if(percentage === 100) emoji = '🥇'\r\n  if(percentage >= 80 && percentage < 100) emoji = '🎉'\r\n  if(percentage >= 50 && percentage < 80) emoji = '🙃'\r\n  if(percentage >= 0 && percentage < 50) emoji = '🤨'\r\n  if(percentage === 0) emoji = '🤦‍♀️'\r\n\r\n  const handleRestartButton = () => {\r\n    dispatch({type: \"restartQuiz\"})\r\n    fetch(\"http://localhost:9000/highscore/1\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ \"highscore\": highScore }),\r\n    })\r\n      .then((res) => res.json())\r\n      .catch((err) => dispatch({ type: \"dataFailed\" }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <p className=\"result\">\r\n      <span>{emoji}</span> You scored <strong>{points}</strong> out of {maxPossiblePoints} ({Math.ceil(percentage)})\r\n    </p>\r\n    <p className=\"highscore\">(Highscore : {highScore} points)</p>\r\n    <button className=\"btn btn-ui\" onClick={handleRestartButton}>\r\n      Restart Quiz\r\n    </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FinishScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,YAAYA,CAAAC,IAAA,EAAqD;EAAA,IAApD;IAAEC,MAAM;IAAEC,iBAAiB;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACtE,MAAMK,UAAU,GAAIJ,MAAM,GAAGC,iBAAiB,GAAI,GAAG;EAErD,IAAII,KAAK;EACT,IAAGD,UAAU,KAAK,GAAG,EAAEC,KAAK,GAAG,IAAI;EACnC,IAAGD,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,GAAG,EAAEC,KAAK,GAAG,IAAI;EACrD,IAAGD,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAEC,KAAK,GAAG,IAAI;EACpD,IAAGD,UAAU,IAAI,CAAC,IAAIA,UAAU,GAAG,EAAE,EAAEC,KAAK,GAAG,IAAI;EACnD,IAAGD,UAAU,KAAK,CAAC,EAAEC,KAAK,GAAG,OAAO;EAEpC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCH,QAAQ,CAAC;MAACI,IAAI,EAAE;IAAa,CAAC,CAAC;IAC/BC,KAAK,CAAC,mCAAmC,EAAE;MACzCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,WAAW,EAAEX;MAAU,CAAC;IACjD,CAAC,CAAC,CACCY,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBC,KAAK,CAAEC,GAAG,IAAKf,QAAQ,CAAC;MAAEI,IAAI,EAAE;IAAa,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACAxB,OAAA;MAAGyB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnBxB,OAAA;QAAAwB,QAAA,EAAOd;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,gBAAY,eAAA7B,OAAA;QAAAwB,QAAA,EAASnB;MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU,YAAQ,EAACvB,iBAAiB,EAAC,IAAE,EAACwB,IAAI,CAACC,IAAI,CAACtB,UAAU,CAAC,EAAC,GAC/G;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACJ7B,OAAA;MAAGyB,SAAS,EAAC,WAAW;MAAAD,QAAA,GAAC,eAAa,EAACjB,SAAS,EAAC,UAAQ;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAC7D7B,OAAA;MAAQyB,SAAS,EAAC,YAAY;MAACO,OAAO,EAAErB,mBAAoB;MAAAa,QAAA,EAAC;IAE7D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBACN;AAEP;AAACI,EAAA,GAnCQ9B,YAAY;AAqCrB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}