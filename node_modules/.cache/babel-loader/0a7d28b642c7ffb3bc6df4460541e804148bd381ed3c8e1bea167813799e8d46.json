{"ast":null,"code":"var _jsxFileName = \"D:\\\\course\\\\react jonas\\\\project\\\\ultimate-react-course\\\\10-react-quiz\\\\starter mine\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\n// import DateCounter from \"./DateCounter\"\nimport { useEffect, useReducer, Fragment } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nimport NextButton from \"./NextButton\";\nimport PrevButton from \"./PrevButton\";\nimport Slider from \"./Slider\";\nimport Progress from \"./Progress\";\nimport FinishScreen from \"./FinishScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  // 'loading, 'error', 'reday', 'active', 'finished'\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\"\n      };\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      return {\n        ...state,\n        answer: action.payload,\n        points: action.payload === question.correctOption ? state.points + question.points : state.points\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null\n      };\n    case \"prevQuestion\":\n      return {\n        ...state,\n        index: state.index - 1,\n        answer: null\n      };\n    default:\n      throw new Error(\"action unknown\");\n  }\n};\nexport default function App() {\n  _s();\n  const [{\n    questions,\n    status,\n    index,\n    answer,\n    points\n  }, dispatch] = useReducer(reducer, initialState);\n  console.log(\"an\", answer);\n  console.log(\"moon\", points);\n  const numQuestions = questions.length;\n  const maxPossiblePoints = questions.reduce((prev, cur) => prev + cur.points, 0);\n  useEffect(() => {\n    fetch(\"http://localhost:9000/questions\").then(res => res.json()).then(data => dispatch({\n      type: \"dataReceived\",\n      payload: data\n    })).catch(err => dispatch({\n      type: \"dataFailed\"\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 34\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 32\n      }, this), status === \"ready\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n        numQuestions: numQuestions,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          index: index,\n          numQuestions: numQuestions,\n          points: points,\n          maxPossiblePoints: maxPossiblePoints,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          questions: questions,\n          question: questions[index],\n          dispatch: dispatch,\n          answer: answer,\n          points: points,\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n          dispatch: dispatch,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PrevButton, {\n          dispatch: dispatch,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), status === \"finish\" && /*#__PURE__*/_jsxDEV(FinishScreen, {\n        maxPossiblePoints: maxPossiblePoints,\n        points: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0OEOIqjdcb8TdctxTjYZDs56r3E=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Fragment","Header","Main","Loader","Error","StartScreen","Question","NextButton","PrevButton","Slider","Progress","FinishScreen","jsxDEV","_jsxDEV","initialState","questions","status","index","answer","points","reducer","state","action","type","payload","question","at","correctOption","App","_s","dispatch","console","log","numQuestions","length","maxPossiblePoints","reduce","prev","cur","fetch","then","res","json","data","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/course/react jonas/project/ultimate-react-course/10-react-quiz/starter mine/src/components/App.js"],"sourcesContent":["// import DateCounter from \"./DateCounter\"\r\nimport { useEffect, useReducer, Fragment } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Loader from \"./Loader\";\r\nimport Error from \"./Error\";\r\nimport StartScreen from \"./StartScreen\";\r\nimport Question from \"./Question\";\r\nimport NextButton from \"./NextButton\";\r\nimport PrevButton from \"./PrevButton\";\r\nimport Slider from \"./Slider\";\r\nimport Progress from \"./Progress\";\r\nimport FinishScreen from \"./FinishScreen\";\r\n\r\nconst initialState = {\r\n  questions: [],\r\n\r\n  // 'loading, 'error', 'reday', 'active', 'finished'\r\n  status: \"loading\",\r\n  index: 0,\r\n  answer: null,\r\n  points: 0,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"dataReceived\":\r\n      return { ...state, questions: action.payload, status: \"ready\" };\r\n    case \"dataFailed\":\r\n      return { ...state, status: \"error\" };\r\n    case \"start\":\r\n      return { ...state, status: \"active\" };\r\n    case \"newAnswer\":\r\n      const question = state.questions.at(state.index);\r\n      return {\r\n        ...state,\r\n        answer: action.payload,\r\n        points:\r\n          action.payload === question.correctOption\r\n            ? state.points + question.points\r\n            : state.points,\r\n      };\r\n    case \"nextQuestion\":\r\n      return { ...state, index: state.index + 1, answer: null };\r\n    case \"prevQuestion\":\r\n      return { ...state, index: state.index - 1, answer: null };\r\n    default:\r\n      throw new Error(\"action unknown\");\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  const [{ questions, status, index, answer, points }, dispatch] = useReducer(\r\n    reducer,\r\n    initialState\r\n  );\r\n\r\n  console.log(\"an\", answer);\r\n\r\n  console.log(\"moon\", points);\r\n\r\n  const numQuestions = questions.length;\r\n  const maxPossiblePoints = questions.reduce(\r\n    (prev, cur) => prev + cur.points,\r\n    0\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/questions\")\r\n      .then((res) => res.json())\r\n      .then((data) => dispatch({ type: \"dataReceived\", payload: data }))\r\n      .catch((err) => dispatch({ type: \"dataFailed\" }));\r\n  }, []);\r\n  return (\r\n    <div className=\"app\">\r\n      {/* <DateCounter /> */}\r\n      <Header />\r\n\r\n      <Main>\r\n        {status === \"loading\" && <Loader />}\r\n        {status === \"error\" && <Error />}\r\n        {status === \"ready\" && (\r\n          <StartScreen numQuestions={numQuestions} dispatch={dispatch} />\r\n        )}\r\n        {status === \"active\" && (\r\n          <Fragment>\r\n            <Progress\r\n              index={index}\r\n              numQuestions={numQuestions}\r\n              points={points}\r\n              maxPossiblePoints={maxPossiblePoints}\r\n              answer={answer}\r\n            />\r\n            <Question\r\n              questions={questions}\r\n              question={questions[index]}\r\n              dispatch={dispatch}\r\n              answer={answer}\r\n              points={points}\r\n              index={index}\r\n            />\r\n            <NextButton dispatch={dispatch} answer={answer} />\r\n            <PrevButton dispatch={dispatch} answer={answer} />\r\n          </Fragment>\r\n        )}\r\n                {status === \"finish\" && <FinishScreen maxPossiblePoints={maxPossiblePoints} points={points} />}\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}