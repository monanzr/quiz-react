{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useMemo } from \"react\";\nimport QuizContext from \"../context/provider\";\nconst useQuiz = () => {\n  _s();\n  const {\n    status,\n    index,\n    answer,\n    points,\n    highScore,\n    secondsRemaining,\n    numQuestions,\n    maxPossiblePoints,\n    dispatch\n  } = useContext(QuizContext);\n  return {\n    // getQuestions: useMemo(() => questions, [questions]),\n    getStatus: useMemo(() => status, [status]),\n    getIndex: useMemo(() => index, [index]),\n    getAnswer: useMemo(() => answer, [answer]),\n    getPoints: useMemo(() => points, [points]),\n    getHighScore: useMemo(() => highScore, [highScore]),\n    getSecondsRemaining: useMemo(() => secondsRemaining, [secondsRemaining]),\n    // getFilterQuestions: useMemo(() => filterQuestions, [filterQuestions]),\n    // getQuestionsLevel: useMemo(() => questionsLevel, [questionsLevel]),\n    getNumQuestions: useMemo(() => numQuestions, [numQuestions]),\n    getMaxPossiblePoints: useMemo(() => maxPossiblePoints, [maxPossiblePoints]),\n    onDataReceived: data => dispatch({\n      type: \"dataReceived\",\n      payload: data\n    }),\n    onDataFailed: () => dispatch({\n      type: \"dataFailed\"\n    }),\n    onStart: () => dispatch({\n      type: \"start\"\n    }),\n    onNewAnswer: data => dispatch({\n      type: \"newAnswer\",\n      payload: data\n    }),\n    onNextQuestion: () => dispatch({\n      type: \"nextQuestion\"\n    }),\n    onPrevQuestion: () => dispatch({\n      type: \"prevQuestion\"\n    }),\n    onFinishedQuiz: () => dispatch({\n      type: \"finishedQuiz\"\n    }),\n    onRestartQuiz: () => dispatch({\n      type: \"restartQuiz\"\n    }),\n    onTick: () => dispatch({\n      type: \"tick\"\n    }),\n    onFilteredQuestions: data => dispatch({\n      type: \"filteredQuestions\",\n      payload: data\n    }),\n    onSelectedQuestions: data => dispatch({\n      type: \"selectedQuestions\",\n      payload: data\n    })\n  };\n};\n_s(useQuiz, \"DuMwc3e/Z6ggRKP80vZ2u0Hfjy0=\");\nexport default useQuiz;","map":{"version":3,"names":["useContext","useMemo","QuizContext","useQuiz","_s","status","index","answer","points","highScore","secondsRemaining","numQuestions","maxPossiblePoints","dispatch","getStatus","getIndex","getAnswer","getPoints","getHighScore","getSecondsRemaining","getNumQuestions","getMaxPossiblePoints","onDataReceived","data","type","payload","onDataFailed","onStart","onNewAnswer","onNextQuestion","onPrevQuestion","onFinishedQuiz","onRestartQuiz","onTick","onFilteredQuestions","onSelectedQuestions"],"sources":["D:/course/react jonas/project/ultimate-react-course/10-react-quiz/starter mine/apps/react/src/hooks/useQuiz.js"],"sourcesContent":["import { useContext, useMemo } from \"react\"\r\nimport QuizContext from \"../context/provider\"\r\n\r\nconst useQuiz = () => {\r\n    const { status, index, answer, points, highScore, secondsRemaining, numQuestions, maxPossiblePoints, dispatch } = useContext(QuizContext)\r\n\r\n    return {\r\n        // getQuestions: useMemo(() => questions, [questions]),\r\n        getStatus: useMemo(() => status, [status]),\r\n        getIndex: useMemo(() => index, [index]),\r\n        getAnswer: useMemo(() => answer, [answer]),\r\n        getPoints: useMemo(() => points, [points]),\r\n        getHighScore: useMemo(() => highScore, [highScore]),\r\n        getSecondsRemaining: useMemo(() => secondsRemaining, [secondsRemaining]),\r\n        // getFilterQuestions: useMemo(() => filterQuestions, [filterQuestions]),\r\n        // getQuestionsLevel: useMemo(() => questionsLevel, [questionsLevel]),\r\n        getNumQuestions: useMemo(() => numQuestions, [numQuestions]),\r\n        getMaxPossiblePoints: useMemo(() => maxPossiblePoints, [maxPossiblePoints]),\r\n        onDataReceived: (data) => dispatch({ type: \"dataReceived\", payload: data }),\r\n        onDataFailed: () => dispatch({ type: \"dataFailed\" }),\r\n        onStart: () => dispatch({ type: \"start\" }),\r\n        onNewAnswer: (data) => dispatch({ type: \"newAnswer\", payload: data }),\r\n        onNextQuestion: () => dispatch({ type: \"nextQuestion\", }),\r\n        onPrevQuestion: () => dispatch({ type: \"prevQuestion\", }),\r\n        onFinishedQuiz: () => dispatch({ type: \"finishedQuiz\", }),\r\n        onRestartQuiz: () => dispatch({ type: \"restartQuiz\", }),\r\n        onTick: () => dispatch({ type: \"tick\", }),\r\n        onFilteredQuestions: (data) => dispatch({ type: \"filteredQuestions\", payload: data }),\r\n        onSelectedQuestions: (data) => dispatch({ type: \"selectedQuestions\", payload: data }),\r\n    }\r\n}\r\n\r\nexport default useQuiz"],"mappings":";AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,qBAAqB;AAE7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC,gBAAgB;IAAEC,YAAY;IAAEC,iBAAiB;IAAEC;EAAS,CAAC,GAAGb,UAAU,CAACE,WAAW,CAAC;EAEzI,OAAO;IACH;IACAY,SAAS,EAAEb,OAAO,CAAC,MAAMI,MAAM,EAAE,CAACA,MAAM,CAAC,CAAC;IAC1CU,QAAQ,EAAEd,OAAO,CAAC,MAAMK,KAAK,EAAE,CAACA,KAAK,CAAC,CAAC;IACvCU,SAAS,EAAEf,OAAO,CAAC,MAAMM,MAAM,EAAE,CAACA,MAAM,CAAC,CAAC;IAC1CU,SAAS,EAAEhB,OAAO,CAAC,MAAMO,MAAM,EAAE,CAACA,MAAM,CAAC,CAAC;IAC1CU,YAAY,EAAEjB,OAAO,CAAC,MAAMQ,SAAS,EAAE,CAACA,SAAS,CAAC,CAAC;IACnDU,mBAAmB,EAAElB,OAAO,CAAC,MAAMS,gBAAgB,EAAE,CAACA,gBAAgB,CAAC,CAAC;IACxE;IACA;IACAU,eAAe,EAAEnB,OAAO,CAAC,MAAMU,YAAY,EAAE,CAACA,YAAY,CAAC,CAAC;IAC5DU,oBAAoB,EAAEpB,OAAO,CAAC,MAAMW,iBAAiB,EAAE,CAACA,iBAAiB,CAAC,CAAC;IAC3EU,cAAc,EAAGC,IAAI,IAAKV,QAAQ,CAAC;MAAEW,IAAI,EAAE,cAAc;MAAEC,OAAO,EAAEF;IAAK,CAAC,CAAC;IAC3EG,YAAY,EAAEA,CAAA,KAAMb,QAAQ,CAAC;MAAEW,IAAI,EAAE;IAAa,CAAC,CAAC;IACpDG,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC;MAAEW,IAAI,EAAE;IAAQ,CAAC,CAAC;IAC1CI,WAAW,EAAGL,IAAI,IAAKV,QAAQ,CAAC;MAAEW,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEF;IAAK,CAAC,CAAC;IACrEM,cAAc,EAAEA,CAAA,KAAMhB,QAAQ,CAAC;MAAEW,IAAI,EAAE;IAAgB,CAAC,CAAC;IACzDM,cAAc,EAAEA,CAAA,KAAMjB,QAAQ,CAAC;MAAEW,IAAI,EAAE;IAAgB,CAAC,CAAC;IACzDO,cAAc,EAAEA,CAAA,KAAMlB,QAAQ,CAAC;MAAEW,IAAI,EAAE;IAAgB,CAAC,CAAC;IACzDQ,aAAa,EAAEA,CAAA,KAAMnB,QAAQ,CAAC;MAAEW,IAAI,EAAE;IAAe,CAAC,CAAC;IACvDS,MAAM,EAAEA,CAAA,KAAMpB,QAAQ,CAAC;MAAEW,IAAI,EAAE;IAAQ,CAAC,CAAC;IACzCU,mBAAmB,EAAGX,IAAI,IAAKV,QAAQ,CAAC;MAAEW,IAAI,EAAE,mBAAmB;MAAEC,OAAO,EAAEF;IAAK,CAAC,CAAC;IACrFY,mBAAmB,EAAGZ,IAAI,IAAKV,QAAQ,CAAC;MAAEW,IAAI,EAAE,mBAAmB;MAAEC,OAAO,EAAEF;IAAK,CAAC;EACxF,CAAC;AACL,CAAC;AAAAnB,EAAA,CA3BKD,OAAO;AA6Bb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}