{"ast":null,"code":"const SECS_PER_QUESTION = 30;\nconst questionsLevelObj = {\n  all: \"all\",\n  easy: \"easy\",\n  medium: \"medium\",\n  hard: \"hard\"\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        filterQuestions: state.questions,\n        status: \"ready\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\",\n        secondsRemaining: state.filterQuestions.length * SECS_PER_QUESTION\n      };\n    case \"newAnswer\":\n      const question = state.filterQuestions.at(state.index);\n      return {\n        ...state,\n        answer: action.payload,\n        points: action.payload === question.correctOption ? state.points + question.points : state.points\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null\n      };\n    case \"prevQuestion\":\n      return {\n        ...state,\n        index: state.index - 1,\n        answer: null\n      };\n    case \"finishedQuiz\":\n      return {\n        ...state,\n        status: \"finish\",\n        highScore: state.points > state.highScore ? state.points : state.highScore,\n        secondsRemaining: 10\n      };\n    case \"restartQuiz\":\n      return {\n        ...state,\n        status: \"ready\",\n        index: 0,\n        answer: null,\n        points: 0,\n        highScore: state.highScore,\n        secondsRemaining: 10,\n        filterQuestions: []\n      };\n    case \"tick\":\n      return {\n        ...state,\n        secondsRemaining: state.secondsRemaining - 1,\n        status: state.secondsRemaining === 0 ? \"finish\" : state.status\n      };\n    case \"filteredQuestions\":\n      return {\n        ...state,\n        status: \"ready\",\n        questionsLevel: action.payload,\n        filterQuestions: action.payload === questionsLevelObj.all && state.questions || action.payload === questionsLevelObj.easy && state.questions.filter(question => question.points === 10) || action.payload === questionsLevelObj.medium && state.questions.filter(question => question.points === 20) || action.payload === questionsLevelObj.hard && state.questions.filter(question => question.points === 30)\n      };\n    case \"selectedQuestions\":\n      return {\n        ...state,\n        status: \"ready\",\n        filterQuestions: state.questions.slice(0, action.payload).map(question => question)\n      };\n    default:\n      throw new Error(\"action unknown\");\n  }\n};\nexport default reducer;","map":{"version":3,"names":["SECS_PER_QUESTION","questionsLevelObj","all","easy","medium","hard","reducer","state","action","type","questions","payload","filterQuestions","status","secondsRemaining","length","question","at","index","answer","points","correctOption","highScore","questionsLevel","filter","slice","map","Error"],"sources":["D:/course/react jonas/project/ultimate-react-course/10-react-quiz/starter mine/apps/react/src/context/reducer.js"],"sourcesContent":["const SECS_PER_QUESTION = 30;\r\n\r\nconst questionsLevelObj = {\r\n    all: \"all\",\r\n    easy: \"easy\",\r\n    medium: \"medium\",\r\n    hard: \"hard\",\r\n  };\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"dataReceived\":\r\n        return {\r\n          ...state,\r\n          questions: action.payload,\r\n          filterQuestions: state.questions,\r\n          status: \"ready\",\r\n        };\r\n      case \"dataFailed\":\r\n        return { ...state, status: \"error\" };\r\n      case \"start\":\r\n        return {\r\n          ...state,\r\n          status: \"active\",\r\n          secondsRemaining: state.filterQuestions.length * SECS_PER_QUESTION,\r\n        };\r\n      case \"newAnswer\":\r\n        const question = state.filterQuestions.at(state.index);\r\n        return {\r\n          ...state,\r\n          answer: action.payload,\r\n          points:\r\n            action.payload === question.correctOption\r\n              ? state.points + question.points\r\n              : state.points,\r\n        };\r\n      case \"nextQuestion\":\r\n        return { ...state, index: state.index + 1, answer: null };\r\n      case \"prevQuestion\":\r\n        return { ...state, index: state.index - 1, answer: null };\r\n      case \"finishedQuiz\":\r\n        return {\r\n          ...state,\r\n          status: \"finish\",\r\n          highScore:\r\n            state.points > state.highScore ? state.points : state.highScore,\r\n          secondsRemaining: 10,\r\n        };\r\n      case \"restartQuiz\":\r\n        return {\r\n          ...state,\r\n          status: \"ready\",\r\n          index: 0,\r\n          answer: null,\r\n          points: 0,\r\n          highScore: state.highScore,\r\n          secondsRemaining: 10,\r\n          filterQuestions: [],\r\n        };\r\n      case \"tick\":\r\n        return {\r\n          ...state,\r\n          secondsRemaining: state.secondsRemaining - 1,\r\n          status: state.secondsRemaining === 0 ? \"finish\" : state.status,\r\n        };\r\n      case \"filteredQuestions\":\r\n        return {\r\n          ...state,\r\n          status: \"ready\",\r\n          questionsLevel: action.payload,\r\n          filterQuestions:\r\n            (action.payload === questionsLevelObj.all && state.questions) ||\r\n            (action.payload === questionsLevelObj.easy &&\r\n              state.questions.filter((question) => question.points === 10)) ||\r\n            (action.payload === questionsLevelObj.medium &&\r\n              state.questions.filter((question) => question.points === 20)) ||\r\n            (action.payload === questionsLevelObj.hard &&\r\n              state.questions.filter((question) => question.points === 30)),\r\n        };\r\n      case \"selectedQuestions\":\r\n        return {\r\n          ...state,\r\n          status: \"ready\",\r\n          filterQuestions: state.questions.slice(0, action.payload).map((question) => question)\r\n        };\r\n      default:\r\n        throw new Error(\"action unknown\");\r\n    }\r\n  };\r\n\r\n  export default reducer\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}